// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/game_engine_service.go

// Package services is a generated GoMock package.
package services

import (
	model "BattlesnakeReptarium/internal/model"
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGameEngineService is a mock of GameEngineService interface.
type MockGameEngineService struct {
	ctrl     *gomock.Controller
	recorder *MockGameEngineServiceMockRecorder
}

// MockGameEngineServiceMockRecorder is the mock recorder for MockGameEngineService.
type MockGameEngineServiceMockRecorder struct {
	mock *MockGameEngineService
}

// NewMockGameEngineService creates a new mock instance.
func NewMockGameEngineService(ctrl *gomock.Controller) *MockGameEngineService {
	mock := &MockGameEngineService{ctrl: ctrl}
	mock.recorder = &MockGameEngineServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGameEngineService) EXPECT() *MockGameEngineServiceMockRecorder {
	return m.recorder
}

// EndGame mocks base method.
func (m *MockGameEngineService) EndGame(ctx context.Context, game model.Game, board model.Board, self model.Snake) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EndGame", ctx, game, board, self)
	ret0, _ := ret[0].(error)
	return ret0
}

// EndGame indicates an expected call of EndGame.
func (mr *MockGameEngineServiceMockRecorder) EndGame(ctx, game, board, self interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EndGame", reflect.TypeOf((*MockGameEngineService)(nil).EndGame), ctx, game, board, self)
}

// StartGame mocks base method.
func (m *MockGameEngineService) StartGame(ctx context.Context, game model.Game, board model.Board, self model.Snake) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartGame", ctx, game, board, self)
	ret0, _ := ret[0].(error)
	return ret0
}

// StartGame indicates an expected call of StartGame.
func (mr *MockGameEngineServiceMockRecorder) StartGame(ctx, game, board, self interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartGame", reflect.TypeOf((*MockGameEngineService)(nil).StartGame), ctx, game, board, self)
}
